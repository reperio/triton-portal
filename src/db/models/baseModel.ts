import {Model} from 'objection';
import {v4} from 'uuid';

export class BaseModel extends Model {
    private createdAt: Date;
    private updatedAt: Date;

    
    autoGeneratedId(): string {
        return null;
    }

    $beforeInsert(context: any) {
        const parent = super.$beforeInsert(context);

        return Promise.resolve(parent)
            .then(() => {
                this.createdAt = new Date();
                this.updatedAt = new Date();

                const base: any = this;

                if (this.autoGeneratedId && !base[this.autoGeneratedId()] && this.autoGeneratedId() != null) {
                    base[this.autoGeneratedId()] = v4();
                }
            });
    }

    $beforeUpdate(opt: any, context: any) {
        const parent = super.$beforeUpdate(opt, context);

        return Promise.resolve(parent)
            .then(() => {
                this.updatedAt = new Date();
            });
    }
}